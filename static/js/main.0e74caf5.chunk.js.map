{"version":3,"sources":["js/components/ProjectPopup.js","js/components/ProjectCard.js","js/components/RowProjectCard.js","js/components/CreateProjectForm.js","js/components/Filter.js","js/components/SideBar.js","js/components/UserProfile.js","js/components/UserInfo.js","js/components/UserProject.js","js/components/App.js","js/other/serviceWorker.js","index.js"],"names":["ProjectPopup","props","state","className","type","dataToggle","dataTarget","id","dataDismiss","Component","ProjectCard","name","projectCardData","description","projectPopupData","data","this","projectData","RowProjectCard","columns","map","value","index","key","CreatePodForm","initialState","handleChange","event","target","setState","submitForm","handleSubmit","class","for","placeholder","onChange","required","onClick","Filter","SideBar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","UserProfile","src","alt","role","aria-valuenow","aria-valuemin","aria-valuemax","aria-hidden","Example","App","project","projects","bind","CreateProjectForm","UserInfo","UserProject","Boolean","window","location","hostname","match","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0e74caf5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass ProjectPopup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  render() {\r\n    let modalClass = \"modal fade \";\r\n\r\n    return (\r\n      <div className=\"ProjectPopup\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          dataToggle=\"modal\"\r\n          dataTarget=\"#myModal\"\r\n        >\r\n          Click on this\r\n        </button>\r\n        <div className=\"modal fade\" id=\"myModal\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Idea Name</h4>\r\n                <button type=\"button\" className=\"close\" dataDismiss=\"modal\">\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">Modal body..</div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary btn-danger\"\r\n                  dataDismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary btn-Primary\"\r\n                  dataDismiss=\"modal\"\r\n                >\r\n                  Join the slack Now\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectPopup;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\nimport ProjectPopup from \"./ProjectPopup\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\n//<img src=\"...\" className=\"card-img-top\" alt=\"...\"></img>\r\n\r\nclass ProjectCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.projectCardData.name,\r\n      description: this.props.projectCardData.description,\r\n      projectPopupData: {\r\n        data: \"Hello World\",\r\n      },\r\n    };\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  handlePopup() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ProjectCard\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{this.state.name}</h5>\r\n            <p className=\"card-text\">{this.state.description}</p>\r\n            <ProjectPopup projectData={this.state.projectPopupData} />\r\n            <button className=\"btn btn-primary\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCard;\r\n\r\n/*\r\n\r\ngetBadgeClasses() {\r\n    let classes = \"badge mx-4\";\r\n    if (this.state.count === 0) {\r\n      classes += \" badge-warning\";\r\n    } else {\r\n      classes += \" badge-primary\";\r\n    }\r\n    return classes;\r\n  }\r\n  */\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass RowProjectCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectData: this.props.projectData,\r\n    };\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  render() {\r\n    const columns = this.props.projectData.map((value, index) => {\r\n      return (\r\n        <div className=\"col-sm mx-2\" key={index}>\r\n          <ProjectCard projectCardData={value} />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"RowProjectCard\">\r\n        <div className=\"row\">{columns}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RowProjectCard;\r\n\r\n/*\r\n<div className=\"RowProjectCard\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm mx-2\">\r\n            <ProjectCard projectCardData={this.state.projectData[0]} />\r\n          </div>\r\n          <div className=\"col-sm mx-2\">\r\n            <ProjectCard projectCardData={this.state.projectData[1]} />\r\n          </div>\r\n          <div className=\"col-sm mx-2\">\r\n            <h1>Hello World</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n*/\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass CreatePodForm extends Component {\r\n  initialState = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreatePodForm\">\r\n        <h3>Name: {this.state.name}</h3>\r\n        <h3>Description: {this.state.description}</h3>\r\n        <form className=\"form my-4\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Project Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter Project Name\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <div class=\"valid-feedback\">Valid.</div>\r\n            <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"description\">Project Description:</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter Project Description\"\r\n              name=\"description\"\r\n              value={this.state.description}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <div class=\"valid-feedback\">Valid.</div>\r\n            <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n          </div>\r\n          <input\r\n            type=\"button\"\r\n            value=\"submit\"\r\n            class=\"btn btn-primary\"\r\n            onClick={this.submitForm}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePodForm;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Filter\"></div>;\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\n\r\n// Things to consider\r\n\r\n//  - use classNameName instead of className\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass SideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          Idea-Connect\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                Home <span class=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                Idea\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                DashBoard\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                Contact Us\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form class=\"form-inline my-2 my-lg-0\">\r\n            <input\r\n              class=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\r\n              Search Idea\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\nimport \"../../css/components/UserProfile.css\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"UserProfile\">\r\n        <div className=\"navbarProfile\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              Navbar\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                  <a className=\"nav-link\" href=\"#\">\r\n                    Home <span className=\"sr-only\">(current)</span>\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">\r\n                    Idea\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">\r\n                    Profile\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">\r\n                    Contact Us\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"display-4\">Welcome Coder</h1>\r\n          <img\r\n            src=\"profile.png\"\r\n            className=\"rounded-circle align-center\"\r\n            alt=\"Cinque Terre\"\r\n          />\r\n          <p className=\"lead\">\r\n            I am intrested to work on technical projects like Machine Learning,\r\n            AI and Web development. Lorem ipsum, dolor sit amet consectetur\r\n            adipisicing elit. Minus expedita id, assumenda nostrum voluptates\r\n            ut, consequuntur quia repellat magni quasi reprehenderit iste cum.\r\n            Omnis velit blanditiis possimus mollitia reprehenderit magni?\r\n          </p>\r\n          <hr className=\"my-4\" />\r\n          <p>\r\n            It uses utility classNamees for typography and spacing to space\r\n            content out within the larger container.\r\n          </p>\r\n\r\n          <div className=\"projects my-4\">\r\n            <h3 className=\"\">DASHBOARD</h3>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card \">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Project 1</h5>\r\n                    <p className=\"card-text\">\r\n                      With supporting text below as a natural lead-in to\r\n                      additional content.\r\n                    </p>\r\n                    <div className=\"progress my-2 \">\r\n                      <div\r\n                        className=\"progress-bar progress_style\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow=\"72\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        72%\r\n                      </div>\r\n                    </div>\r\n                    <a href=\"#\" className=\"btn btn-dark\">\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card \">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Project 2</h5>\r\n                    <p className=\"card-text\">\r\n                      With supporting text below as a natural lead-in to\r\n                      additional content.\r\n                    </p>\r\n\r\n                    <div className=\"progress my-2 progress_style\">\r\n                      <div\r\n                        className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow=\"12\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        12%\r\n                      </div>\r\n                    </div>\r\n                    <a href=\"#\" className=\"btn btn-dark\">\r\n                      GitHub\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Project 3</h5>\r\n                    <p className=\"card-text\">\r\n                      With supporting text below as a natural lead-in to\r\n                      additional content.\r\n                    </p>\r\n                    <div className=\"progress my-2 progress_style\">\r\n                      <div\r\n                        className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow=\"32\"\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                      >\r\n                        32%\r\n                      </div>\r\n                    </div>\r\n                    <a href=\"#\" className=\"btn btn-dark \">\r\n                      Github\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h3>Technical Interest</h3>\r\n          <p>\r\n            <span className=\"badge badge-primary\">GitHub</span>\r\n            <span className=\"badge badge-secondary\">Machine Learning</span>\r\n            <span className=\"badge badge-success\">React</span>\r\n            <span className=\"badge badge-danger\">firebase</span>\r\n            <span className=\"badge badge-warning\">Google Cloud</span>\r\n          </p>\r\n\r\n          <p>\r\n            It uses utility classNamees for typography and spacing to space\r\n            content out within the larger container.\r\n          </p>\r\n          <a className=\"btn btn-dark btn-lg\" href=\"#\" role=\"button\">\r\n            <i className=\"fa fa-github\" aria-hidden=\"true\"></i>\r\n          </a>\r\n          <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\r\n            <i className=\"fa fa-facebook-square\" aria-hidden=\"true\"></i>\r\n          </a>\r\n          <a className=\"btn btn-danger btn-lg\" href=\"#\" role=\"button\">\r\n            <i className=\"fa fa-google-plus\" aria-hidden=\"true\"></i>\r\n          </a>\r\n          <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\r\n            <i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass Example extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Example\">\r\n        <h1>Example</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../css/frameworks/normalize.css\";\r\n\r\n// Things to consider\r\n\r\n//  - use className instead of class\r\n//  - self closing tag must be closed with a slash\r\n//     - example: <img />\r\n//  - this is not html, it is jsx\r\n//  - all styles must follow camelCase format\r\n//     - background-color becomes backgroundColor\r\n//     - onclick becomes onClick\r\n//  - you can use {} inside of attributes and text nodes\r\n//     - inside the curly you can put any js expressions\r\n//  - You can add example image using this link\r\n//     - https://picsum.photos/width/height\r\n//     - Be sure to change the width and height\r\n\r\nclass Example extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // any method using this keyword must bind\r\n    // example: this.method = this.method.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Things to do when the component is first rendered into the dom\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Things to do when the component is removed\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Example\">\r\n        <h1>Example</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","import React, { Component } from \"react\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../css/frameworks/normalize.css\";\nimport \"../../css/components/App.css\";\nimport RowProjectCard from \"./RowProjectCard\";\nimport CreateProjectForm from \"./CreateProjectForm\";\nimport Filter from \"./Filter\";\nimport SideBar from \"./SideBar\"; // To Do: change the github page link to a link you want\nimport UserProfile from \"./UserProfile\";\nimport UserInfo from \"./UserInfo\";\nimport UserProject from \"./UserProject\";\n// don't need firebase here\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [\n        {\n          name: \"Project 1\",\n          description: \"Project 1 test des\",\n        },\n        {\n          name: \"Project 2\",\n          description: \"Project 2 test des\",\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // any method using this keyword must bind\n    // example: this.method = this.method.bind(this)\n  }\n\n  handleSubmit = (project) => {\n    this.setState({\n      projects: [...this.state.projects, project],\n    });\n  };\n\n  /* removeProject = (index) => {\n    const { projects } = this.state;\n\n    this.setState({\n      projects: projects.filter((project, i) => {\n        return i !== index;\n      }),\n    });\n  }; */\n\n  render() {\n    const { projects } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container-fluid\">\n          <SideBar />\n          <CreateProjectForm handleSubmit={this.handleSubmit} />\n          <RowProjectCard projectData={projects} />\n          <Filter />\n          <UserProfile />\n          <UserInfo />\n          <UserProject />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/frameworks/normalize.css\";\nimport \"./css/webpages/index.css\";\nimport App from \"./js/components/App\";\nimport * as serviceWorker from \"./js/other/serviceWorker\";\nimport * as firebase from \"firebase\";\n\nvar config = {\n  apiKey: \"AIzaSyAu7m_yOxsLapML0gabBU-tEIEF3xFqU0k\",\n  authDomain: \"collab-connect.firebaseapp.com\",\n  databaseURL: \"https://collab-connect.firebaseio.com\",\n  projectId: \"collab-connect\",\n  storageBucket: \"collab-connect.appspot.com\",\n};\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCGxO1ZcPpq7YE8YTNbbYYAwtwqsXWYstM\",\n  authDomain: \"collab-connect-b6358.firebaseapp.com\",\n  databaseURL: \"https://collab-connect-b6358.firebaseio.com\",\n  projectId: \"collab-connect-b6358\",\n  storageBucket: \"collab-connect-b6358.appspot.com\",\n  messagingSenderId: \"793236351163\",\n  appId: \"1:793236351163:web:e40f09a799d781a253a19e\",\n  measurementId: \"G-ZR04XQ31R9\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}